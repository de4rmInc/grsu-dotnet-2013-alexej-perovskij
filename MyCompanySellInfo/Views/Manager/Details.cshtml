@model MyCompanySellInfo.Models.Manager

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>


<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript" src="~/Scripts/googleCharts.js"></script>
<script type="text/javascript">
    drawcharts('@Url.Action("ChartData")?id=' + '@Model.Id');
</script>

<div>
    <h4>Manager</h4>
    <hr />
    <dl class="dl-horizontal" onload="drawcharts()">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

    </dl>
    <hr />
    <h4>Sales</h4>
    <div >
        <div class="row">
            <div class="col-md-5">
                <table class="table-bordered">
                    <thead>
                        <tr>
                            @{var stock = Model.Stocks.FirstOrDefault();}
                            <th>@Html.DisplayNameFor(itemStock => stock.Client)</th>
                            <th>@Html.DisplayNameFor(itemStock => stock.Good.Name)</th>
                            <th>@Html.DisplayNameFor(itemStock => stock.Date)</th>
                            <th>@Html.DisplayNameFor(itemStock => stock.Cost)</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Stocks)
                        {
                            <tr>
                                <td>@Html.DisplayFor(itemStock => item.Client)</td>
                                <td>
                                    @{
                            var goodName = Html.DisplayFor(modelItem => item.Good.Name).ToString();
                                    }
                                    @Html.ActionLink(goodName, "Details", "Good", new { id = item.GoodsID }, null)
                                </td>
                                <td>@Html.DisplayFor(itemStock => item.Date)</td>
                                <td>@Html.DisplayFor(itemStock => item.Cost)</td>
                                <td>
                                    <p>
                                        <div class="dropdown">
                                            <button class="dropdown-toggle btn-primary" data-toggle="dropdown">Action</button>
                                            <ul class="dropdown-menu">
                                                <li>@Html.ActionLink("Edit", "Edit", "Stock", new { id = item.Id }, null)</li>
                                                <li>@Html.ActionLink("Details", "Details", "Stock", new { id = item.Id }, null)</li>
                                                <li class="divider"></li>
                                                <li>@Html.ActionLink("Delete", "Delete", "Stock", new { id = item.Id }, null)</li>
                                            </ul>
                                        </div>
                                    </p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-md-5">
                <div id="piechart0" style="width: 600px; height: 300px;"></div>
            </div>
        </div>

    </div>

</div>
<hr />
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>