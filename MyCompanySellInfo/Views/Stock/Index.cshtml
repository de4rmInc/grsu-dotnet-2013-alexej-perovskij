@model PagedList.IPagedList<MyCompanySellInfo.Models.Stock>
@using PagedList.Mvc;
@using MyCompanySellInfo.Helpers
@using MyCompanySellInfo.Models
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    Stock stock = new Stock();
    ViewBag.Title = "Stocks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript" src="~/Scripts/googleCharts.js"></script>
<script type="text/javascript">
    drawcharts('@Url.Action("ChartData")');
</script>

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Index", "Stock", FormMethod.Get, new { @class = "form-inline", role = "form" }))
{
    <div class="table">
        <div class="row">
            <div class="col-xs-2">
                <label>Filter by:</label>
            </div>
            <div class="col-xs-3">
                <label>Search:</label>
            </div>
        </div>

        <div class="row">
            <div class="col-xs-2">
                @Html.DropDownList("searchItem", ViewBag.searchItems as SelectList, new { @class = "form-control" })
            </div>
            <div class="col-xs-3">
                @Html.TextBox("searchString", null, new { @class = "form-control", @placeholder = "Search string" })
            </div>
            <div class="col-xs-2">
                <input type="submit" value="Search" class="form-control btn btn-info" />
            </div>
            <div class="col-xs-2">
                @Html.ActionLink("Reset", "Index", null, new { @class = "form-control btn btn-danger", @type = "button" })
            </div>
            <div class="col-xs-2">
                @Html.ActionLink("Create New", "Create", null, new { @class = "form-control btn btn-primary", @type = "button" })
            </div>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Client).ToHtmlString(), "Index",
            new
            {
                order = (ViewBag.order != null) ? (
                ViewBag.order == OrderFilters.Client ?
                OrderFilters.ClientDesc :
                OrderFilters.Client) :
                OrderFilters.Client
                ,
                searchItem = ViewBag.searchItem,
                searchString = ViewBag.searchString,
                page = ViewBag.page
            })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Date).ToHtmlString(), "Index",
            new
            {
                order = (ViewBag.order != null) ? (
                ViewBag.order == OrderFilters.Date ?
                OrderFilters.DateDesc :
                OrderFilters.Date
                ) :
                OrderFilters.Date
                ,
                searchItem = ViewBag.searchItem,
                searchString = ViewBag.searchString,
                page = ViewBag.page
            })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Cost)
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Good.Name).ToHtmlString(), "Index",
            new
            {
                order = (ViewBag.order != null) ? (
                ViewBag.order == OrderFilters.Goods ?
                OrderFilters.GoodsDesc :
                OrderFilters.Goods
                ) :
                OrderFilters.Goods
                ,
                searchItem = ViewBag.searchItem,
                searchString = ViewBag.searchString,
                page = ViewBag.page
            })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Manager).ToHtmlString(), "Index",
            new
            {
                order = (ViewBag.order != null) ? (
                ViewBag.order == OrderFilters.Manager ?
                OrderFilters.ManagerDesc :
                OrderFilters.Manager
                ) :
                OrderFilters.Manager
                ,
                searchItem = ViewBag.searchItem,
                searchString = ViewBag.searchString,
                page = ViewBag.page
            })
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Client)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td>
                @{
        var goodName = Html.DisplayFor(modelItem => item.Good.Name).ToString();
        @Html.ActionLink(goodName, "Details", "Good", new { id = item.GoodsID }, null)
                }
            </td>
            <td>
                @{
        var managerName = Html.DisplayFor(modelItem => item.Manager.FirstName).ToString() +
                        " " +
                        Html.DisplayFor(modelItem => item.Manager.LastName).ToString();
                        @Html.ActionLink(managerName, "Details", "Manager", new { id = item.ManagerID }, null)
                }
            </td>Admin
            <td>
                <div class="dropdown">
                    <button class="dropdown-toggle btn btn-primary" data-toggle="dropdown">Action</button>
                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("Edit", "Edit", new { id = item.Id })</li>
                        <li>@Html.ActionLink("Details", "Details", new { id = item.Id })</li>
                        <li class="divider"></li>
                        <li>@Html.ActionLink("Delete", "Delete", new { id = item.Id })</li>
                    </ul>
                </div>
            </td>
        </tr>
    }
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page =>
    Url.Action("Index", new
    {
        searchItem = ViewBag.searchItem,
        searchString = ViewBag.searchString,
        order = ViewBag.order,
        page
    })
    )
<div class="row">
    <div class="col-md-5">
        <div id="piechart0" style="width: 600px; height: 400px;"></div>
    </div>
    <div class="col-md-5">
        <div id="piechart1" style="width: 600px; height: 400px;"></div>
    </div>
</div>